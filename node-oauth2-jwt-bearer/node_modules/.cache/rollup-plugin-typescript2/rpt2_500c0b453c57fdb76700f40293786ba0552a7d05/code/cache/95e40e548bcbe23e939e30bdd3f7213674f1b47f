{"code":"import { jwtVerifier, claimCheck as _claimCheck, claimEquals as _claimEquals, claimIncludes as _claimIncludes, requiredScopes as _requiredScopes, } from 'access-token-jwt';\r\nimport { getToken } from 'oauth2-bearer';\r\nexport const auth = (opts = {}) => {\r\n    const verifyJwt = jwtVerifier(opts);\r\n    return async (req, res, next) => {\r\n        try {\r\n            const jwt = getToken(req.headers, req.query, req.body, !!req.is('urlencoded'));\r\n            req.auth = await verifyJwt(jwt);\r\n            next();\r\n        }\r\n        catch (e) {\r\n            next(e);\r\n        }\r\n    };\r\n};\r\nconst toHandler = (fn) => (req, res, next) => {\r\n    var _a;\r\n    try {\r\n        fn((_a = req.auth) === null || _a === void 0 ? void 0 : _a.payload);\r\n        next();\r\n    }\r\n    catch (e) {\r\n        next(e);\r\n    }\r\n};\r\nexport const claimCheck = (...args) => toHandler(_claimCheck(...args));\r\nexport const claimEquals = (...args) => toHandler(_claimEquals(...args));\r\nexport const claimIncludes = (...args) => toHandler(_claimIncludes(...args));\r\nexport const requiredScopes = (...args) => toHandler(_requiredScopes(...args));\r\nexport { UnauthorizedError, InvalidRequestError, InvalidTokenError, InsufficientScopeError, } from 'oauth2-bearer';\r\n","references":["C:/Prosjekter/ReLynk/node-oauth2-jwt-bearer/node_modules/@types/express/index.d.ts","C:/Prosjekter/ReLynk/node-oauth2-jwt-bearer/packages/access-token-jwt/dist/index.d.ts","C:/Prosjekter/ReLynk/node-oauth2-jwt-bearer/packages/access-token-jwt/dist/index.d.ts","C:/Prosjekter/ReLynk/node-oauth2-jwt-bearer/packages/oauth2-bearer/dist/index.d.ts","C:/Prosjekter/ReLynk/node-oauth2-jwt-bearer/packages/access-token-jwt/dist/index.d.ts","C:/Prosjekter/ReLynk/node-oauth2-jwt-bearer/packages/oauth2-bearer/dist/index.d.ts"]}
