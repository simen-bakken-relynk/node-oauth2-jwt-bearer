import type { JWTPayload } from 'jose';
export declare type JSONPrimitive = string | number | boolean | null;
declare type ClaimChecker = (payload?: JWTPayload) => void;
export declare type RequiredScopes<R = ClaimChecker> = (scopes: string | string[]) => R;
export declare const requiredScopes: RequiredScopes;
export declare type ClaimIncludes<R = ClaimChecker> = (claim: string, ...expected: JSONPrimitive[]) => R;
export declare const claimIncludes: ClaimIncludes;
export declare type ClaimEquals<R = ClaimChecker> = (claim: string, expected: JSONPrimitive) => R;
export declare const claimEquals: ClaimEquals;
export declare type ClaimCheck<R = ClaimChecker> = (fn: (payload: JWTPayload) => boolean, errMsg?: string) => R;
export declare const claimCheck: ClaimCheck;
export {};
